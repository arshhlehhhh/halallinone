{"remainingRequest":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\src\\views\\ForgetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\src\\views\\ForgetPassword.vue","mtime":1605374709650},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone-prod\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZW1haWxqcyBmcm9tICdlbWFpbGpzLWNvbSc7CmltcG9ydCBnZW5lcmF0b3IgZnJvbSAnZ2VuZXJhdGUtcGFzc3dvcmQnOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZW1haWw6ICcnLAogICAgICB1c2VyTmFtZTogJycsCiAgICAgIHN1Y2Nlc3M6ICcnCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgLy8gIDEuIHVzZSBzZXNzaW9uJ3MgZW1haWwgYW5kIHVzZXJuYW1lIHRvIHBvcHVsYXRlCiAgICAvLyAyLiBmaW5kIGEgcmFuZG9tIGdlbmVyYXRvcgogICAgLy8gMy4gc2V0IHRoZSByYW5kb20gZ2VuZXJhdGVkIHB3IHRvIHRoZSB0aGUgb25lIHNlbmRpbmcgZm9yIGVtYWlsCiAgICAvLyA0LiBoYXNoIHRoZSAgcmFuZG9tIGdlbmVyYXRlZCBwdyB0aGVuIHVwZGF0ZQogICAgc2VuZEVtYWlsOiBmdW5jdGlvbiBzZW5kRW1haWwoZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgLy8gcmV0cmlldmUgZW1haWwgaW5wdXQKICAgICAgdmFyIGVtYWlsSW5wdXQgPSB0aGlzLmVtYWlsOyAvLyBnZW5lcmF0ZSBwdwoKICAgICAgdmFyIHBsYWluVGV4dFB3ID0gZ2VuZXJhdG9yLmdlbmVyYXRlKHsKICAgICAgICBsZW5ndGg6IDEwLAogICAgICAgIG51bWJlcnM6IHRydWUKICAgICAgfSk7IC8vIGNhbGwgYXhpb3MgZ2V0IHVzaW5nIGVtYWlsCgogICAgICB2YXIgZW1haWxVcmwgPSAnaHR0cHM6Ly93YWQyLWhhbGxhbGxpbm9uZS5ldC5yLmFwcHNwb3QuY29tL3VzZXIvZ2V0L2VtYWlsPScgKyBlbWFpbElucHV0OwogICAgICBheGlvcy5nZXQoZW1haWxVcmwpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgICBfdGhpcy51c2VyTmFtZSA9IHJlc3BvbnNlLmRhdGEuVXNlclswXS51c2VybmFtZTsKICAgICAgICAgIGVtYWlsanMuaW5pdCgndXNlcl9nbGg1NlIycElYS25xOFhnOW1OSmknKTsKICAgICAgICAgIGVtYWlsanMuc2VuZCgnc2VydmljZV95a2x4OGc4JywgJ3RlbXBsYXRlXzVteWoxaHInLCB7CiAgICAgICAgICAgIHRvX25hbWU6IF90aGlzLnVzZXJOYW1lLAogICAgICAgICAgICBwYXNzd29yZDogcGxhaW5UZXh0UHcsCiAgICAgICAgICAgIHRvX2VtYWlsOiBlbWFpbElucHV0CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KTsKICAgICAgICAgICAgY29uc29sZS5sb2coJ1NVQ0NFU1MhJywgcmVzdWx0LnN0YXR1cywgcmVzdWx0LnRleHQpOwogICAgICAgICAgICBfdGhpcy5zdWNjZXNzID0gJ0VtYWlsIHNlbnQhIFBsZWFzZSBjaGVjayB5b3VyIGVtYWlsIHRvIGNoYW5nZSB5b3VyIHBhc3N3b3JkISc7CiAgICAgICAgICAgIF90aGlzLmVtYWlsID0gJyc7IC8vIGdlbmVyYXRlIHNoYSAyNTYgaGFzaAoKICAgICAgICAgICAgdmFyIGNyeXB0b09iamVjdCA9IFZ1ZS5DcnlwdG9KUy5TSEEyNTYocGxhaW5UZXh0UHcpLnRvU3RyaW5nKCk7IC8vIHNldHVwIHRvIHB1c2gKCiAgICAgICAgICAgIHZhciB1cGRhdGVVc2VyTmFtZSA9IF90aGlzLnVzZXJOYW1lOwogICAgICAgICAgICB2YXIgdXJsVXBkYXRlREIgPSAnaHR0cHM6Ly93YWQyLWhhbGxhbGxpbm9uZS5ldC5yLmFwcHNwb3QuY29tL3VzZXIvY2hhbmdlcGFzc3dvcmQnOwogICAgICAgICAgICB2YXIgYXV0aCA9IHsKICAgICAgICAgICAgICB1c2VybmFtZTogdXBkYXRlVXNlck5hbWUsCiAgICAgICAgICAgICAgcGFzc3dvcmQ6IGNyeXB0b09iamVjdAogICAgICAgICAgICB9OyAvLyBzZXQgdXAgYXhpb3MgcG9zdAoKICAgICAgICAgICAgYXhpb3MucG9zdCh1cmxVcGRhdGVEQiwgYXV0aCkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDEpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwdyB1cGRhdGVkIGluIGRiIScpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnInLCBlcnIpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICBjb25zb2xlLmxvZygnRkFJTEVELi4uJywgZXJyb3IpOwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgY29uc29sZS5sb2coJ2VycicsIGVycik7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ForgetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,OAAA,MAAA,aAAA;AACA,OAAA,SAAA,MAAA,mBAAA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA,IAAA,SALA,qBAKA,CALA,EAKA;AAAA;;AACA;AACA,UAAA,UAAA,GAAA,KAAA,KAAA,CAFA,CAGA;;AACA,UAAA,WAAA,GAAA,SAAA,CAAA,QAAA,CAAA;AACA,QAAA,MAAA,EAAA,EADA;AAEA,QAAA,OAAA,EAAA;AAFA,OAAA,CAAA,CAJA,CAQA;;AACA,UAAA,QAAA,GAAA,+DAAA,UAAA;AACA,MAAA,KAAA,CAAA,GAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,YAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,QAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,4BAAA;AACA,UAAA,OAAA,CAAA,IAAA,CAAA,iBAAA,EAAA,kBAAA,EAAA;AACA,YAAA,OAAA,EAAA,KAAA,CAAA,QADA;AAEA,YAAA,QAAA,EAAA,WAFA;AAGA,YAAA,QAAA,EAAA;AAHA,WAAA,EAKA,IALA,CAKA,UAAA,MAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,MAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA;AACA,YAAA,KAAA,CAAA,OAAA,GAAA,8DAAA;AACA,YAAA,KAAA,CAAA,KAAA,GAAA,EAAA,CAJA,CAKA;;AACA,gBAAA,YAAA,GAAA,GAAA,CAAA,QAAA,CAAA,MAAA,CAAA,WAAA,EAAA,QAAA,EAAA,CANA,CAOA;;AACA,gBAAA,cAAA,GAAA,KAAA,CAAA,QAAA;AACA,gBAAA,WAAA,GAAA,gEAAA;AACA,gBAAA,IAAA,GAAA;AAAA,cAAA,QAAA,EAAA,cAAA;AAAA,cAAA,QAAA,EAAA;AAAA,aAAA,CAVA,CAWA;;AACA,YAAA,KAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,kBAAA,QAAA,CAAA,MAAA,KAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,mBAAA;AACA;AACA,aAJA,EAIA,UAAA,GAAA,EAAA;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,GAAA;AACA,aANA;AAOA,WAxBA,EAwBA,UAAA,KAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,KAAA;AACA,WA1BA;AA2BA;AACA,OAhCA,EAgCA,UAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA,EAAA,GAAA;AACA,OAlCA;AAmCA;AAlDA;AARA,CAAA","sourcesContent":["<template>\r\n    <b-row class=\"forgotPassword\">\r\n        <b-col md=\"2\" class=\"green\"></b-col>\r\n        <b-col>\r\n          <br>\r\n          <b-alert show variant=\"success\" v-if=\"success\" class=\"text-center\">{{ success }}</b-alert>\r\n        <div class=\"title\">\r\n            <img src=\"../assets/logo.png\">\r\n            <!-- <h1>Forgot your Password?</h1> -->\r\n        </div>\r\n        <!-- Problem Section -->\r\n        <div class=\"spacing\">\r\n            <b-card title=\"Forgot your Password?\" style=\"max-width: 50%;\">\r\n                <b-card-text>\r\n                    Don't worry about it! Just enter your email here so you can reset your password and explore all the delicious halal food once more.\r\n                </b-card-text>\r\n                <b-form v-on:submit.prevent=\"sendEmail()\">\r\n                    <b-form-group label-for=\"email\">\r\n                        <b-form-input id=\"email\" v-model=\"email\" type=\"email\" placeholder=\"Email\" required=\"required\"></b-form-input>\r\n                    </b-form-group>\r\n                    <b-button type=\"submit\" variant=\"success\" style=\"width:100%;\">Reset your Password</b-button>\r\n                </b-form>\r\n            </b-card>\r\n        </div>\r\n        </b-col>\r\n        <b-col md=\"2\" class=\"green\"></b-col>\r\n    </b-row>\r\n</template>\r\n<style lang=\"scss\">\r\n.forgotPassword {\r\n  .title {\r\n      text-align: center;\r\n      margin-top: 30px;\r\n    }\r\n    .spacing {\r\n      padding: 10px;\r\n      display: flex;\r\n      justify-content: center;\r\n      margin:50px 0 100px 0;\r\n\r\n    }\r\n    .card-title, .card-text {\r\n        text-align:center;\r\n        margin-bottom:20px;\r\n    }\r\n}\r\n</style>\r\n<script>\r\nimport emailjs from 'emailjs-com'\r\nimport generator from 'generate-password'\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nexport default {\r\n  data () {\r\n    return {\r\n      email: '',\r\n      userName: '',\r\n      success: ''\r\n    }\r\n  },\r\n  methods: {\r\n    //  1. use session's email and username to populate\r\n    // 2. find a random generator\r\n    // 3. set the random generated pw to the the one sending for email\r\n    // 4. hash the  random generated pw then update\r\n    sendEmail (e) {\r\n      // retrieve email input\r\n      var emailInput = this.email\r\n      // generate pw\r\n      var plainTextPw = generator.generate({\r\n        length: 10,\r\n        numbers: true\r\n      })\r\n      // call axios get using email\r\n      const emailUrl = 'https://wad2-hallallinone.et.r.appspot.com/user/get/email=' + emailInput\r\n      axios.get(emailUrl).then((response) => {\r\n        if (response.status === 200) {\r\n          this.userName = response.data.User[0].username\r\n          emailjs.init('user_glh56R2pIXKnq8Xg9mNJi')\r\n          emailjs.send('service_yklx8g8', 'template_5myj1hr', {\r\n            to_name: this.userName,\r\n            password: plainTextPw,\r\n            to_email: emailInput\r\n          })\r\n            .then((result) => {\r\n              console.log(result)\r\n              console.log('SUCCESS!', result.status, result.text)\r\n              this.success = 'Email sent! Please check your email to change your password!'\r\n              this.email = ''\r\n              // generate sha 256 hash\r\n              var cryptoObject = Vue.CryptoJS.SHA256(plainTextPw).toString()\r\n              // setup to push\r\n              var updateUserName = this.userName\r\n              const urlUpdateDB = 'https://wad2-hallallinone.et.r.appspot.com/user/changepassword'\r\n              const auth = { username: updateUserName, password: cryptoObject }\r\n              // set up axios post\r\n              axios.post(urlUpdateDB, auth).then((response) => {\r\n                if (response.status === 201) {\r\n                  console.log('pw updated in db!')\r\n                }\r\n              }, function (err) {\r\n                console.log('err', err)\r\n              })\r\n            }, (error) => {\r\n              console.log('FAILED...', error)\r\n            })\r\n        }\r\n      }, function (err) {\r\n        console.log('err', err)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views"}]}