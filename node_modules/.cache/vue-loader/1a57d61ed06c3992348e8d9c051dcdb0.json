{"remainingRequest":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\src\\views\\EastRegion.vue?vue&type=template&id=a98a32ea&","dependencies":[{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\src\\views\\EastRegion.vue","mtime":1604449457147},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ashley Lau\\Documents\\GitHub\\halallinone\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}